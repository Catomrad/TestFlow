// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  username     String           @unique
  password     String
  role         String           // "admin" | "user"
  createdAt    DateTime         @default(now())
  projects     Project[]        @relation("CreatedProjects")
  memberships  ProjectMember[]
  testPlans    TestPlan[]
  testCases    TestCase[]
  flowcharts   Flowchart[]
}

model Project {
  id           Int              @id @default(autoincrement())
  name         String
  createdAt    DateTime         @default(now())
  createdBy    User             @relation("CreatedProjects", fields: [createdById], references: [id])
  createdById  Int
  members      ProjectMember[]
  testPlans    TestPlan[]
  flowcharts   Flowchart[]
}

model ProjectMember {
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
  project    Project @relation(fields: [projectId], references: [id])
  projectId  Int
  role       String // "admin" | "user"
  joinedAt   DateTime @default(now())

  @@id([userId, projectId])
}

model TestPlan {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  createdAt  DateTime @default(now())
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  Int
  createdBy  User     @relation(fields: [createdById], references: [id])
  createdById Int
  testCases  TestCase[]
}

model TestCase {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  steps      Json
  expected   String
  createdAt  DateTime @default(now())
  plan       TestPlan @relation(fields: [planId], references: [id])
  planId     Int
  createdBy  User     @relation(fields: [createdById], references: [id])
  createdById Int
}

model Flowchart {
  id         Int      @id @default(autoincrement())
  name       String
  data       Json     // структура блок-схемы (узлы/связи и т.п.)
  createdAt  DateTime @default(now())
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  Int
  createdBy  User     @relation(fields: [createdById], references: [id])
  createdById Int
}